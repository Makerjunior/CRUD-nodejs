

//CONEXÃO COM O BANCO DE DADOS 

const mysql = require('mysql');

class ClassCrud {

    constructor() {
        //Conexão com base de dados
        this.sql = mysql.createPool({
            host: 'localhost',
            user: 'root',
            password: '',
            port: 3306,
            database: 'nodejs'
        })

    }


    read(req, res) {
        // Se não for passado um id
        if (!req.params.id) {
            // Inicia a conxão
            this.sql.getConnection(function (err, connection) {
                // função que retorna os valores da querry      
                connection.query("SELECT * FROM user order by id asc", function (err, results, fields) { // err = erros , results =  resultados, fields = campos da pesquisa
                    res.render('select.handlebars', { data: results })
                } // Passa para a view o obj data com os valores da pesquisa 
                )
              }
            )
        } else {
            // Inicia a conxão
            this.sql.getConnection(function (err, connection) {
                 //Se for passado um id a pesquisa sera feita de acordo com o id passado
                connection.query("SELECT * FROM user WHERE id=? order by id asc", [req.params.id], function (err, results, fields) { // err = erros , results =  resultados, fields = campos da pesquisa
                    res.render('select.handlebars', { data: results })
                } // Passa para a view o obj data com os valores da pesquisa 
                )
            })
        }

    }



    create(req, res) {
            // Inicia a conxão
        this.sql.getConnection(function (err, connection) {
            // Query que insere os dados / req.body.campo_do_formulario
            connection.query("insert into user values (?,?,?)", [req.body.id, req.body.nome, req.body.senha])
            // Redireciona para a pagina controler.handlebars e envia o valor do campo nome 
            res.render('controllerForm.handlebars', { nome: req.body.nome })
        })

    }

    delete(req, res) {
            // Inicia a conxão
        this.sql.getConnection(function (err, connection) {
            connection.query("DELETE FROM user WHERE id=?", [req.params.id])
            res.render("delete.handlebars")
        })

    }

    update(req, res, controller = null) {
        if (controller == null) {
            // Inicia a conxão
            this.sql.getConnection(function (err, connection) {
                connection.query("select * from user where id=?", [req.params.id], function (err, results, fields) {
                    res.render('update.handlebars', { id: req.params.id, nome: results[0].nome, senha: results[0].senha })
                    console.log(results[0].nome)
                })

            })
        } else {
            // Inicia a conxão
            this.sql.getConnection(function (err, connection) {
                connection.query("UPDATE user SET nome=?, senha=? WHERE id=?", [req.body.nome, req.body.senha, req.body.id])
                res.render('controllerUpdate.handlebars')
                console.log('Pagina de update')
            })

        }

    }




}
module.exports = ClassCrud